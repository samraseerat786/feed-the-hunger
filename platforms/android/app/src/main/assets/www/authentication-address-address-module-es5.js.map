{"version":3,"sources":["./src/app/authentication/address/address.page.html","./src/app/authentication/address/address.module.ts","./src/app/authentication/address/address.page.scss","./src/app/authentication/address/address.page.ts"],"names":[],"mappings":"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","file":"authentication-address-address-module-es5.js","sourcesContent":["module.exports = \"<ion-header class=\\\"ion-text-center\\\">\\r\\n    <ion-toolbar color=\\\"secondary\\\">\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Sign Up</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <form [formGroup]=\\\"addressForm\\\">\\r\\n        <ion-grid>\\r\\n            <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n                <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"9\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\" size-xs=\\\"12\\\" size-sm=\\\"10\\\">\\r\\n                    <div class=\\\"ion-text-center\\\">\\r\\n                        <h3>Enter Address Details</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"ion-padding\\\">\\r\\n                        <ion-item>\\r\\n                            <ion-input placeholder=\\\"Street address\\\" formControlName=\\\"streetAddress\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                        <div>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"registerAddressFormControl.streetAddress.touched && registerAddressFormControl.streetAddress.errors?.required\\\">street Address required.</span>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"submitted && registerAddressFormControl.streetAddress.errors?.required\\\">street Address required.</span>\\r\\n                        </div>\\r\\n                        <ion-item>\\r\\n                            <ion-input placeholder=\\\"City\\\" formControlName=\\\"city\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                        <div>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"registerAddressFormControl.city.touched && registerAddressFormControl.city.errors?.required\\\">city required.</span>\\r\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('city').hasError('pattern')\\\">Enter only digits</span>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"submitted && registerAddressFormControl.city.errors?.required\\\">city required.</span>\\r\\n                        </div>\\r\\n                        <ion-item>\\r\\n                            <ion-input placeholder=\\\"zip Code\\\" formControlName=\\\"zipCode\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                        <div>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"registerAddressFormControl.zipCode.touched && registerAddressFormControl.zipCode.errors?.required\\\">zip Code required.</span>\\r\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('zipCode').hasError('pattern')\\\">Enter only digits</span>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"submitted && registerAddressFormControl.zipCode.errors?.required\\\">zip Code required.</span>\\r\\n                        </div>\\r\\n                        <ion-item>\\r\\n                            <ion-input placeholder=\\\"state\\\" formControlName=\\\"state\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                        <div>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"registerAddressFormControl.state.touched && registerAddressFormControl.state.errors?.required\\\">state required.</span>\\r\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('state').hasError('pattern')\\\">Enter only Alphabets</span>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"submitted && registerAddressFormControl.state.errors?.required\\\">state required.</span>\\r\\n                        </div>\\r\\n                        <ion-item>\\r\\n                            <ion-input placeholder=\\\"Country\\\" formControlName=\\\"country\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                        <div>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"registerAddressFormControl.country.touched && registerAddressFormControl.country.errors?.required\\\">country required.</span>\\r\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"addressForm.get('country').hasError('pattern')\\\">Enter only Alphabets</span>\\r\\n                            <span class=\\\"text-danger\\\"\\r\\n                                  *ngIf=\\\"submitted && registerAddressFormControl.country.errors?.required\\\">country required.</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ion-padding\\\">\\r\\n                        <ion-button (click)=\\\"registerCharityHouse()\\\" color=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\">\\r\\n                            Register&nbsp;&nbsp;&nbsp;<ion-spinner name=\\\"lines\\\" *ngIf=\\\"loading\\\"></ion-spinner>\\r\\n                        </ion-button>\\r\\n                    </div>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </ion-grid>\\r\\n    </form>\\r\\n</ion-content>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {AddressPage} from './address.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddressPage\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        RouterModule.forChild(routes),\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [AddressPage]\r\n})\r\nexport class AddressPageModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2FkZHJlc3MvYWRkcmVzcy5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {ListService} from '../../services/list.service';\r\nimport {UtilsService} from \"../../services/utils.service\";\r\n\r\n@Component({\r\n    selector: 'app-address',\r\n    templateUrl: './address.page.html',\r\n    styleUrls: ['./address.page.scss'],\r\n})\r\nexport class AddressPage implements OnInit {\r\n\r\n    addressForm: FormGroup;\r\n    charity;\r\n    loading: boolean;\r\n    submitted: any;\r\n\r\n    constructor(private utils: UtilsService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private http: HttpClient,\r\n                private service: ListService,\r\n                private formBuilder: FormBuilder\r\n    ) {\r\n    }\r\n\r\n    obj;\r\n    user;\r\n\r\n    ngOnInit() {\r\n        this.route.paramMap.subscribe(paramMap => {\r\n            this.obj = paramMap.get('id');\r\n        });\r\n        this.formInitializer();\r\n    }\r\n\r\n    formInitializer() {\r\n        this.addressForm = this.formBuilder.group({\r\n            streetAddress: [null, [Validators.required]],\r\n            city: [null, [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n            zipCode: [null, [Validators.required, Validators.pattern('[0-9]*')]],\r\n            state: [null, [Validators.required, Validators.pattern('[a-zA-Z]*')]],\r\n            country: [null, [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\r\n        });\r\n    }\r\n\r\n    get registerAddressFormControl() {\r\n        return this.addressForm.controls;\r\n    }\r\n\r\n    registerCharityHouse() {\r\n        this.submitted = true;\r\n        this.loading = true;\r\n        if (this.addressForm.valid) {\r\n            const formData = this.addressForm.value;\r\n            this.charity = '' + this.obj + '\"address\" : {\"streetAddress\" : \"' + formData.streetAddress +\r\n                '\" , \"city\" : \"' + formData.city +\r\n                '\" , \"zipCode\" : \"' + formData.zipCode +\r\n                '\" , \"state\" : \"' + formData.state +\r\n                '\" , \"country\" : \"' + formData.country +\r\n                '\" } }';\r\n            const completeCharityHouse = JSON.parse(this.charity);\r\n            this.utils.presentLoading(\"Creating your account, please be patient...\");\r\n            this.saveHttpReq(completeCharityHouse).subscribe(data => {\r\n                    this.utils.stopLoading();\r\n                    this.loading = false;\r\n                    this.utils.presentAlert('Please! check your email and verify your account.');\r\n                    this.router.navigate(['login']);\r\n                },\r\n                error => {\r\n                    this.utils.stopLoading();\r\n                    console.log('error', error);\r\n                });\r\n        }\r\n        this.loading = false;\r\n    }\r\n\r\n    saveHttpReq(dataObj): Observable<any> {\r\n        const url = `${this.service.homeUrl}/charityHouses/newCharityHouse`;\r\n        const test = this.http.post(url, dataObj);\r\n        this.loading = false;\r\n        return test;\r\n    }\r\n}\r\n"],"sourceRoot":""}