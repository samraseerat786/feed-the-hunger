{"version":3,"sources":["./src/app/authentication/forgot-password/forgot-password.page.html","./src/app/authentication/forgot-password/forgot-password.module.ts","./src/app/authentication/forgot-password/forgot-password.page.scss","./src/app/authentication/forgot-password/forgot-password.page.ts"],"names":[],"mappings":"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","file":"authentication-forgot-password-forgot-password-module-es5.js","sourcesContent":["module.exports = \"<ion-header class=\\\"ion-text-center\\\">\\r\\n    <ion-toolbar color=\\\"secondary\\\">\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Forgot Password</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <form [formGroup]=\\\"forgotPasswordForm\\\">\\r\\n        <ion-grid>\\r\\n            <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n                <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n                    <div class=\\\"ion-text-center\\\">\\r\\n                        <h3>Reset Your Password!</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"ion-padding\\\">\\r\\n                        <ion-item>\\r\\n                            <ion-input (change)=\\\"checkEmail()\\\" formControlName=\\\"email\\\" type=\\\"text\\\"\\r\\n                                       placeholder=\\\"Email\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                        <ion-item>\\r\\n                            <ion-input placeholder=\\\"New Password\\\" formControlName=\\\"password\\\" [type]=\\\"passwordType\\\"\\r\\n                                       clearOnEdit=\\\"false\\\"></ion-input>\\r\\n                            <ion-icon item-end [name]=\\\"passwordIcon\\\" class=\\\"passwordIcon\\\" (click)='hideShowPassword()'\\r\\n                                      color=\\\"secondary\\\"></ion-icon>\\r\\n                        </ion-item>\\r\\n                    </div>\\r\\n                    <div class=\\\"ion-padding\\\">\\r\\n                        <ion-button shape=\\\"round\\\" (click)=\\\"resetPassword()\\\" color=\\\"primary\\\" type=\\\"submit\\\"\\r\\n                                    expand=\\\"block\\\">Reset Password\\r\\n                        </ion-button>\\r\\n                    </div>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </ion-grid>\\r\\n    </form>\\r\\n</ion-content>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {ForgotPasswordPage} from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ForgotPasswordPage\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        RouterModule.forChild(routes),\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {\r\n}\r\n","module.exports = \".passwordIcon {\\n  font-size: 2rem !important;\\n  position: relative !important;\\n  top: 0px !important;\\n  margin: 0 auto !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vZm9yZ290LXBhc3N3b3JkL0Q6XFxGWVBcXGZlZWQtdGhlLWh1bmRlci9zcmNcXGFwcFxcYXV0aGVudGljYXRpb25cXGZvcmdvdC1wYXNzd29yZFxcZm9yZ290LXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvYXV0aGVudGljYXRpb24vZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFzc3dvcmRJY29uIHtcclxuICBmb250LXNpemU6IDJyZW0gIWltcG9ydGFudDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcclxuICB0b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gIG1hcmdpbjogMCBhdXRvICFpbXBvcnRhbnQ7XHJcbn1cclxuIiwiLnBhc3N3b3JkSWNvbiB7XG4gIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbiAgdG9wOiAwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcbn0iXX0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ListService} from '../../services/list.service';\r\nimport {Observable} from 'rxjs';\r\nimport {UtilsService} from \"../../services/utils.service\";\r\n\r\n@Component({\r\n    selector: 'app-forgot-password',\r\n    templateUrl: './forgot-password.page.html',\r\n    styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n    forgotPasswordForm: FormGroup;\r\n    passwordType = 'password';\r\n    passwordIcon = 'eye-off';\r\n    mailloading: boolean;\r\n    emailVerification: boolean;\r\n\r\n    constructor(private utils: UtilsService,\r\n                private route: ActivatedRoute,\r\n                private http: HttpClient,\r\n                private formBuilder: FormBuilder,\r\n                private service: ListService,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.formInitializer();\r\n    }\r\n\r\n    formInitializer() {\r\n        this.forgotPasswordForm = this.formBuilder.group({\r\n            email: [null, [Validators.required]],\r\n            password: [null, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    hideShowPassword() {\r\n        this.passwordType = this.passwordType === 'text' ? 'password' : 'text';\r\n        this.passwordIcon = this.passwordIcon === 'eye-off' ? 'eye' : 'eye-off';\r\n    }\r\n\r\n    async resetPassword() {\r\n        if (this.forgotPasswordForm.valid) {\r\n            const passwordData = this.forgotPasswordForm.value;\r\n            await this.utils.presentLoading(\"Please wait...\");\r\n            this.sendRequest(passwordData).subscribe(d => {\r\n                    this.utils.stopLoading();\r\n                    this.utils.presentToast('Password is successfully updated.');\r\n                    this.router.navigate(['']);\r\n                },\r\n                error => {\r\n                    this.utils.stopLoading();\r\n                    this.utils.presentAlert(':( OOPS ! Server Error.');\r\n                    console.log('error', error);\r\n                });\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    sendRequest(dataObj): Observable<any> {\r\n        const url = `${this.service.homeUrl}/users/updatePassword`;\r\n        const test = this.http.post(url, dataObj);\r\n        return test;\r\n    }\r\n\r\n    async checkEmail() {\r\n        this.mailloading = true;\r\n        const test = this.forgotPasswordForm.value;\r\n        const item = test.email;\r\n        if (item) {\r\n            await this.utils.presentLoading(\"Please wait...\");\r\n            this.http.get(`${this.service.homeUrl}/users/email/${item}`,\r\n                {observe: 'response'}).subscribe(response => {\r\n                this.utils.stopLoading();\r\n                if (response.status === 200 || response.status === 201) {\r\n                    const tester = response.body;\r\n                    if (tester.toString() === 'true') {\r\n                        this.utils.presentAlert('Email does not exist. Try with another email!');\r\n                    }\r\n                    this.mailloading = false;\r\n                }\r\n            }, (error) => {\r\n                this.utils.stopLoading();\r\n                console.log('error.', error);\r\n            });\r\n            this.mailloading = false;\r\n        }\r\n        this.mailloading = false;\r\n    }\r\n}\r\n"],"sourceRoot":""}